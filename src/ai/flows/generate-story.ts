// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Bir hikaye üretme yapay zeka ajanı.
 *
 * - generateStory - Hikaye üretme sürecini yöneten bir fonksiyon.
 * - GenerateStoryInput - generateStory fonksiyonu için giriş tipi.
 * - GenerateStoryOutput - generateStory fonksiyonu için dönüş tipi.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateStoryInputSchema = z.object({
  genre: z
    .string()
    .describe("Üretilecek hikayenin türü (örn. Korku, Macera, Romantik, Bilim Kurgu, Fabl, Felsefi)."),
});
export type GenerateStoryInput = z.infer<typeof GenerateStoryInputSchema>;

const GenerateStoryOutputSchema = z.object({
  title: z.string().describe("Üretilen hikayenin başlığı."),
  content: z.string().describe("Üretilen hikayenin tam metin içeriği."),
  imageUrl: z.string().describe("Üretilen görseli içeren bir data URI. Beklenen format: 'data:<mimetype>;base64,<encoded_data>'"),
});
export type GenerateStoryOutput = z.infer<typeof GenerateStoryOutputSchema>;

export async function generateStory(input: GenerateStoryInput): Promise<GenerateStoryOutput> {
  return generateStoryFlow(input);
}

const generateStoryPrompt = ai.definePrompt({
  name: 'generateStoryPrompt',
  input: {schema: GenerateStoryInputSchema},
  output: {schema: GenerateStoryOutputSchema},
  prompt: `Yaratıcı bir hikaye yazarısın. Aşağıdaki türde bir hikaye yaz: {{{genre}}}. Bu hikayeyle ilişkili başlığı, içeriği ve bir görselin data URI'sini döndür. Hikayeyi Türkçe yaz.`,
});

const generateStoryFlow = ai.defineFlow(
  {
    name: 'generateStoryFlow',
    inputSchema: GenerateStoryInputSchema,
    outputSchema: GenerateStoryOutputSchema,
  },
  async input => {
    const story = await generateStoryPrompt(input);

    const {media} = await ai.generate({
      // IMPORTANT: ONLY the googleai/gemini-2.0-flash-exp model is able to generate images. You MUST use exactly this model to generate images.
      model: 'googleai/gemini-2.0-flash-exp',

      // simple prompt
      prompt: `${story.output!.title} için bir görsel oluştur`,

      config: {
        responseModalities: ['TEXT', 'IMAGE'], // MUST provide both TEXT and IMAGE, IMAGE only won't work
      },
    });

    return {
      title: story.output!.title,
      content: story.output!.content,
      imageUrl: media.url!,
    };
  }
);
